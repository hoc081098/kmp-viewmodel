[versions]
junit = "4.13.2"
kotlin = "1.9.22"
coroutines = "1.7.3"
kotlinx-serialization-json = "1.6.2"
kotlinx-collections-immutable = "0.3.7"

# the Java version that the Java and Kotlin compilers will target
java-target = "11"
# the Java version that is used to run the Java and Kotlin compilers and various other tasks
java-toolchain = "17"

# the Android minSdkVersion to use
android-min = "21"
# the Android target to use
android-target = "33"
# the Android compileSdkVersion to use
android-compile = "33"

# the Android target to use in sample
robolectric = "4.11.1"
sample-android-target = "34"
# the Android compileSdkVersion to use in sample
sample-android-compile = "34"

jetbrains-compose = "1.5.11"
jetbrains-compose-compiler = "1.5.7.1"

touchlab-stately = "2.0.6"
napier = "2.7.1"
flowExt = "0.7.4"
koin = "3.5.3"
koin-androidx-compose = "3.5.3"
koin-compose = "1.1.2"
coil = "2.5.0"
compose-rules-detekt = "0.3.11"

androidx-lifecycle = "2.6.2"
androidx-annotation = "1.7.1"
androidx-activity = "1.8.2"
androidx-compose-compiler = "1.5.8"
androidx-navigation = "2.7.6"
android-gradle = "8.2.1"

spotless = "6.24.0"
detekt = "1.23.4"

kotlinx-kover = "0.7.5"
dokka = "1.9.10"
kotlinx-binary-compatibility-validator = "0.13.2"
poko = "0.15.2"

vanniktech-maven-publish = "0.27.0"
ktlint = "0.50.0"

[libraries]
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "coroutines" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }

jetbrains-compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "jetbrains-compose" }

robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
touchlab-stately-concurrency = { module = "co.touchlab:stately-concurrency", version.ref = "touchlab-stately" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
flowExt = { module = "io.github.hoc081098:FlowExt", version.ref = "flowExt" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-androidx-compose" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
compose-rules-detekt = { module = "io.nlopez.compose.rules:detekt", version.ref = "compose-rules-detekt" }

androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version = "androidx-lifecycle" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version = "2023.10.01" }
androidx-compose-ui-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation" }
androidx-compose-material = { module = "androidx.compose.material:material" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }

jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose" }

android-app = { id = "com.android.application", version.ref = "android-gradle" }
android-library = { id = "com.android.library", version.ref = "android-gradle" }

gradle-spotless = { id = "com.diffplug.gradle.spotless", version.ref = "spotless" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kotlinx-kover" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlinx-binary-compatibility-validator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinx-binary-compatibility-validator" }

poko = { id = "dev.drewhamilton.poko", version.ref = "poko" }
vanniktech-maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "vanniktech-maven-publish" }

[bundles]
