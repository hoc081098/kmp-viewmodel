public abstract class com/hoc081098/kmp/viewmodel/ViewModel {
	public fun <init> ()V
	public fun <init> ([Ljava/io/Closeable;)V
	public final fun addCloseable (Ljava/io/Closeable;)V
	public final fun clear ()V
	public final fun getViewModelScope ()Lkotlinx/coroutines/CoroutineScope;
	protected fun onCleared ()V
}

public final class com/hoc081098/kmp/viewmodel/wrapper/NonNullFlowWrapper : kotlinx/coroutines/flow/Flow {
	public fun <init> (Lkotlinx/coroutines/flow/Flow;)V
	public fun collect (Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun subscribe (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ljava/io/Closeable;
	public final fun subscribe (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Ljava/io/Closeable;
	public final fun subscribe (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/io/Closeable;
	public final fun subscribe (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Ljava/io/Closeable;
}

public final class com/hoc081098/kmp/viewmodel/wrapper/NullableFlowWrapper : kotlinx/coroutines/flow/Flow {
	public fun <init> (Lkotlinx/coroutines/flow/Flow;)V
	public fun collect (Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun subscribe (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;)Ljava/io/Closeable;
	public final fun subscribe (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Ljava/io/Closeable;
	public final fun subscribe (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/io/Closeable;
	public final fun subscribe (Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Ljava/io/Closeable;
}

