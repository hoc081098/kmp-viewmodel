name: Build and publish snapshot

on:
  push:
    branches: [ master ]
    paths-ignore: [ '**.md', '**.MD', '!docs/**' ]
    tags-ignore:
      - '**'
  pull_request:
    branches: [ master ]
    paths-ignore: [ '**.md', '**.MD', '!docs/**' ]
  workflow_dispatch:

concurrency:
  group: 'ci-${{ github.head_ref }}-${{ github.workflow }}'
  cancel-in-progress: true

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-14 ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    if: ${{ github.repository == 'hoc081098/kmp-viewmodel' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      - name: Cache konan
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/cache
            ~/.konan/dependencies
            ~/.konan/kotlin-native-macos*
            ~/.konan/kotlin-native-mingw*
            ~/.konan/kotlin-native-windows*
            ~/.konan/kotlin-native-linux*
            ~/.konan/kotlin-native-prebuilt-macos*
            ~/.konan/kotlin-native-prebuilt-mingw*
            ~/.konan/kotlin-native-prebuilt-windows*
            ~/.konan/kotlin-native-prebuilt-linux*
          key: ${{ matrix.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ matrix.os }}-konan-
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build
        run: |
          ./gradlew \
          :viewmodel:build \
          :viewmodel-savedstate:build \
          :viewmodel-compose:build \
          :viewmodel-koin:build \
          :viewmodel-koin-compose:build \
          :viewmodel-koject:build \
          :viewmodel-koject-compose:build \
          --stacktrace

      - name: Kover Xml Report
        run: ./gradlew :koverXmlReport

      - name: Upload Test Report
        uses: codecov/codecov-action@v4.6.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test report artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/allTests/

  publish:
    needs: [ build ]
    if: ${{ github.ref == 'refs/heads/master' && github.repository == 'hoc081098/kmp-viewmodel' }}
    strategy:
      matrix:
        os: [ macos-14 ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      - name: Cache konan
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/cache
            ~/.konan/dependencies
            ~/.konan/kotlin-native-macos*
            ~/.konan/kotlin-native-mingw*
            ~/.konan/kotlin-native-windows*
            ~/.konan/kotlin-native-linux*
            ~/.konan/kotlin-native-prebuilt-macos*
            ~/.konan/kotlin-native-prebuilt-mingw*
            ~/.konan/kotlin-native-prebuilt-windows*
            ~/.konan/kotlin-native-prebuilt-linux*
          key: ${{ matrix.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ matrix.os }}-konan-
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Retrieve version
        run: |
          echo "VERSION_NAME=$(cat gradle.properties | grep -w "VERSION_NAME" | cut -d'=' -f2)" >> $GITHUB_ENV
        shell: bash

      - name: Publish snapshot
        run: ./gradlew publish --stacktrace
        if: ${{ endsWith(env.VERSION_NAME, '-SNAPSHOT') && contains(matrix.os, 'macos') }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MAVEN_SIGNING_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MAVEN_SIGNING_PASSWORD }}

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install MkDocs MaterialRequirements
        run: pip install -r docs/requirements.txt

      - name: Generate docs
        run: ./gradlew :dokkaHtmlMultiModule --no-parallel --stacktrace

      - name: Copy docs
        run: |
          cp README.md docs/index.md
          cp CHANGELOG.md docs/changelog.md
          sh scripts/update_docs_url.sh "snapshot"
          mkdir -p docs/API
          cp -R build/dokka/htmlMultiModule/. docs/API

      - name: Build MkDocs
        run: mkdocs build --verbose

      - name: Deploy docs ðŸš€ to website
        if: ${{ contains(matrix.os, 'macos') }}
        uses: JamesIves/github-pages-deploy-action@v4.6.8
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: site # The folder the action should deploy.
          target-folder: docs/latest/
          clean: true

  android-instrumented-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: ${{ false }} # TODO: Skip for now
    #    if: ${{ github.repository == 'hoc081098/kmp-viewmodel' &&
    #      !contains(github.event.head_commit.message, '[ci skip]') &&
    #      !contains(github.event.head_commit.message, '[skip ci]') &&
    #      !contains(github.event.pull_request.title, '[skip ci]') &&
    #      !contains(github.event.pull_request.title, '[ci skip]') }}
    strategy:
      fail-fast: true
      matrix:
        api-level: [ 30 ]
    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      - name: Cache konan
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan/cache
            ~/.konan/dependencies
            ~/.konan/kotlin-native-macos*
            ~/.konan/kotlin-native-mingw*
            ~/.konan/kotlin-native-windows*
            ~/.konan/kotlin-native-linux*
            ~/.konan/kotlin-native-prebuilt-macos*
            ~/.konan/kotlin-native-prebuilt-mingw*
            ~/.konan/kotlin-native-prebuilt-windows*
            ~/.konan/kotlin-native-prebuilt-linux*
          key: ${{ matrix.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ matrix.os }}-konan-
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build projects before running emulator
        run: ./gradlew :viewmodel-compose:assembleDebugAndroidTest

      - uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
            ~/.android/debug.keystore
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate AVD snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2.32.0
        with:
          api-level: ${{ matrix.api-level }}
          target: aosp_atd
          arch: x86
          profile: Galaxy Nexus
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          channel: canary
          script: echo "Generated AVD snapshot for caching."

      - name: Run Android instrumented tests
        uses: reactivecircus/android-emulator-runner@v2.32.0
        with:
          api-level: ${{ matrix.api-level }}
          target: aosp_atd
          arch: x86
          profile: Galaxy Nexus
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          channel: canary
          script: |
            adb logcat -c
            adb logcat *:E &
            adb uninstall "com.hoc081098.kmp.viewmodel.compose.test"
            ./gradlew :viewmodel-compose:connectedDebugAndroidTest
